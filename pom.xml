<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- 元数描述 -->
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <name>work-open-api</name>
    <description>work-open-api</description>
    <url>https://github.com/limou3434</url>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- 标识描述 -->
    <groupId>cn.com.edtechhub.workopenapi</groupId>
    <artifactId>work-open-api</artifactId>
    <version>0.0.1</version>

    <!-- 版本描述 -->
    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <!-- 继承描述 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- 依赖描述 -->
    <dependencies>

        <!-- 核心依赖 -->
        <!-- Spring: https://spring.io/ -->
        <dependency>
            <!-- Spring Boot 核心依赖 -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <!-- 引入 Spring Boot 的 Web 相关依赖, 支持 RESTful API 开发, 包含: Spring MVC(用于处理 HTTP 请求)、Jackson(用于 JSON 序列化)、Tomcat(默认内嵌的 Web 服务器) -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <!-- 用于处理 @ConfigurationProperties 注解(改注解可以读取 application 的内容)的元数据生成, 方便 IDE 提示 -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <!-- 提供 Spring AOP 面向切面编程功能, 用于实现日志或权限控制等横切逻辑 -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <!-- Spring Boot 监控组件, 主要用来给 IDEA 作为 Bean 检测所使用的 -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <!-- 提供开发时的工具，比如热加载、自动重启等, 提高开发效率 -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <!-- Hibernate Validator 参数校验模块 -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- MySQL: https://www.mysql.com/ -->
        <dependency>
            <!-- 对 JDBC 接口的具体实现-->
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Redis: https://redis.io/ -->
        <dependency>
            <!-- 提供简单的 Lettuce 客户端 -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <!-- 提供 Redis 连接池 -->
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>

        <!-- Caffeine: https://github.com/ben-manes/caffeine -->
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
            <version>3.1.8</version>
        </dependency>

        <!-- Lombok: https://projectlombok.org/ -->
        <dependency>
            <!-- Lombok 减少 Java 代码中的样板代码, 自动生成 getter/setter、toString()、equals() -->
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Hutool: https://doc.hutool.cn/pages/index/ -->
        <dependency>
            <!-- Hutool 提供了一些使用的 Java 小工具 -->
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.8.8</version>
        </dependency>

        <!-- Guava: https://github.com/google/guava?tab=readme-ov-file  -->
        <dependency>
            <!-- 类似 Hutoll 的工具包 -->
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>31.1-jre</version>
        </dependency>

        <!-- Commons Lang3: https://commons.apache.org/proper/commons-lang/ -->
        <dependency>
            <!-- Commons Lang3 是 Apache 提供的 Java 工具类库, 包含: StringUtils(字符串处理)、ObjectUtils(对象工具)、RandomStringUtils(随机字符串生成)-->
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- OpenAPI: https://doc.xiaominfo.com/ -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-openapi3-spring-boot-starter</artifactId>
            <version>4.4.0</version>
        </dependency>

        <!-- MyBatis Plus: https://baomidou.com/ -->
        <dependency>
            <!-- 主要依赖 -->
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>3.5.11</version>
            <exclusions>
                <!-- 排除默认的 HikariCP, 使用 Druid 代替 -->
                <exclusion>
                    <groupId>com.zaxxer</groupId>
                    <artifactId>HikariCP</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- 解决 PaginationInnerInterceptor 失效问题 -->
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-jsqlparser</artifactId>
            <version>3.5.11</version>
        </dependency>

        <!-- Sa-Token: https://sa-token.cc/doc.html#/ -->
        <dependency>
            <!-- Sa-Token 整合依赖 -->
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-spring-boot-starter</artifactId>
            <version>1.42.0</version>
        </dependency>
        <dependency>
            <!-- Sa-Token 整合 Redis -->
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-redis-template</artifactId>
            <version>1.42.0</version>
        </dependency>
        <dependency>
            <!-- Sa-Token 整合 Redis 时使用 jackson 序列化方式 -->
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-redis-jackson</artifactId>
            <version>1.42.0</version>
        </dependency>

        <!-- Druid: https://github.com/alibaba/druid/ -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.2.23</version>
        </dependency>

        <!-- 拓展依赖 -->
        <!-- Tencent COS: https://cloud.tencent.com/document/product/436/10199 -->
        <!--        <dependency>-->
        <!--            <groupId>com.qcloud</groupId>-->
        <!--            <artifactId>cos_api</artifactId>-->
        <!--            <version>5.6.245</version>-->
        <!--        </dependency>-->

        <!-- HTML Analysis: https://jsoup.org/ -->
        <!--        <dependency>-->
        <!--            <groupId>org.jsoup</groupId>-->
        <!--            <artifactId>jsoup</artifactId>-->
        <!--            <version>1.15.3</version>-->
        <!--        </dependency>-->

        <!-- WebSocket -->
        <!--        <dependency>-->
        <!--            <groupId>org.springframework.boot</groupId>-->
        <!--            <artifactId>spring-boot-starter-websocket</artifactId>-->
        <!--        </dependency>-->

        <!--        &lt;!&ndash; Nacos: https://nacos.io/docs/latest/quickstart/quick-start/?spm=5238cd80.c984973.0.0.6be14023bZ0GqZ &ndash;&gt;-->
        <!--        <dependency>-->
        <!--            <groupId>com.alibaba.boot</groupId>-->
        <!--            <artifactId>nacos-config-spring-boot-starter</artifactId>-->
        <!--            <version>0.2.12</version>-->
        <!--        </dependency>-->

        <!--        &lt;!&ndash; Sentinel: https://sentinelguard.io/zh-cn/index.html &ndash;&gt;-->
        <!--        <dependency>-->
        <!--            &lt;!&ndash; 本依赖内部集成 Sentinel 的所有核心依赖, 包括两个依赖 &ndash;&gt;-->
        <!--            <groupId>com.alibaba.cloud</groupId>-->
        <!--            <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>-->
        <!--            <version>2021.0.5.0</version>-->
        <!--        </dependency>-->

        <!--        &lt;!&ndash; Elasticsearch: https://www.elastic.co/docs/get-started/ &ndash;&gt;-->
        <!--        <dependency>-->
        <!--            <groupId>org.springframework.boot</groupId>-->
        <!--            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>-->
        <!--        </dependency>-->

        <!--        &lt;!&ndash; Redisson: https://github.com/redisson/redisson &ndash;&gt;-->
        <!--        <dependency>-->
        <!--            <groupId>org.redisson</groupId>-->
        <!--            <artifactId>redisson</artifactId>-->
        <!--            <version>3.21.0</version>-->
        <!--        </dependency>-->

        <!--        &lt;!&ndash; Hotkey: https://gitee.com/jd-platform-opensource/hotkey &ndash;&gt;-->
        <!--        <dependency>-->
        <!--            <artifactId>hotkey-client</artifactId>-->
        <!--            <groupId>com.jd.platform.hotkey</groupId>-->
        <!--            <version>0.0.4-SNAPSHOT</version>-->
        <!--            <scope>system</scope>-->
        <!--            <systemPath>${project.basedir}/lib/hotkey-client-0.0.4-SNAPSHOT-jar-with-dependencies.jar</systemPath>-->
        <!--        </dependency>-->

        <!-- 开发依赖 -->
        <!-- OApiCli SDK -->
        <dependency>
            <groupId>cn.com.edtechhub</groupId>
            <artifactId>work-oapicli-sdk</artifactId>
            <version>0.0.1</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>
                    org.springframework.boot
                </groupId>
                <artifactId>
                    spring-boot-maven-plugin
                </artifactId>
                <configuration>
                    <includeSystemScope>
                        true
                    </includeSystemScope> <!-- 将作用域为 system 的依赖也包含在打包中 -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>
                    org.apache.maven.plugins
                </groupId>
                <artifactId>
                    maven-compiler-plugin
                </artifactId>
                <configuration>
                    <source>
                        8
                    </source>
                    <target>
                        8
                    </target>
                </configuration>
            </plugin>
            <!-- 解决测试时的报错 -->
            <plugin>
                <groupId>
                    org.apache.maven.plugins
                </groupId>
                <artifactId>
                    maven-surefire-plugin
                </artifactId>
                <configuration>
                    <argLine>
                        -javaagent:${settings.localRepository}/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar
                    </argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
